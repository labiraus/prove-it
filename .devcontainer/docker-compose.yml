volumes:
  postgres-data:
  redis-data:
  mongo-data:
  localstack:

networks:
  dev_network: # Define the custom network
    driver: bridge

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    env_file:
        # Ensure that the variables in .env match the same variables in devcontainer.json
        - .env

    volumes:
      - ${USERPROFILE}/.kube/config:/home/vscode/.kube/config:ro 
      # Rancher uses windows file paths for mounting
      - ../..:/workspaces:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sh -c "socat TCP-LISTEN:6443,fork TCP:host.docker.internal:6443 & sleep infinity"

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.

    networks:
      - dev_network # Attach to the custom network

  postgres:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      # Ensure that the variables in .env match the same variables in devcontainer.json
      - .env
    networks:
      - dev_network # Attach to the custom network
    profiles:
      - database

  redis:
    image: redis:latest
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDISCLI_AUTH}"]
    volumes:
      - redis-data:/data
    env_file:
      # Ensure that the variables in .env match the same variables in devcontainer.json
      - .env
    networks:
      - dev_network # Attach to the custom network
    profiles:
      - cache

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - dev_network # Attach to the custom network
    profiles:
      - event

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - dev_network # Attach to the custom network
    profiles:
      - event

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
    env_file:
      - .env
    networks:
      - dev_network # Attach to the custom network
    profiles:
      - document
    ports:
      - "27017:27017" # Expose Redis on localhost

  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672" # Management UI
      - "5672:5672"   # AMQP protocol port
    networks:
      - dev_network # Attach to the custom network
    profiles:
      - messaging

  localstack:
    image: localstack/localstack:latest
    restart: unless-stopped
    environment:
      - SERVICES=s3
      - DEBUG=${DEBUG:-1}
      - DATA_DIR=/tmp/localstack/data
      - LAMBDA_EXECUTOR=docker
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "127.0.0.1:4566:4566" # LocalStack Gateway
      - "127.0.0.1:4572:4572" # S3
      - "127.0.0.1:4510-4559:4510-4559"  # External services port range
    networks:
      - dev_network # Attach to the custom network
    profiles:
      - storage